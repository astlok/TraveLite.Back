{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server server.",
        "title": "Echo Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/route": {
            "get": {
                "description": "Get all routes without marks and route line",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route"
                ],
                "summary": "Get all routes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "55.745359 37.658375",
                        "name": "ne",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "55.971152 63.507595",
                        "name": "sw",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Route type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by this, default rate",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "sort desc or asc(by default)",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "difficult=1,4  FIRST is from SECOND is to",
                        "name": "difficult",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "days=2,6  FIRST is from SECOND is to",
                        "name": "days",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "description": "distance=20,50  FIRST is from SECOND is to",
                        "name": "distance",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Route"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route"
                ],
                "summary": "Create a route",
                "parameters": [
                    {
                        "description": "new route",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Route"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Route"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/route/{id}": {
            "get": {
                "description": "Get one route by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Route"
                ],
                "summary": "Get route by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Route id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Route"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "object"
                }
            }
        },
        "models.Coordinates": {
            "type": "object",
            "required": [
                "height",
                "latitude",
                "longitude"
            ],
            "properties": {
                "height": {
                    "type": "string",
                    "example": "5642"
                },
                "latitude": {
                    "type": "string",
                    "example": "56.2348"
                },
                "longitude": {
                    "type": "string",
                    "example": "64.1352"
                }
            }
        },
        "models.Mark": {
            "type": "object",
            "required": [
                "point",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Lexa zachem mi eto delaem"
                },
                "photo": {
                    "type": "string",
                    "example": "Tut mogla bit vasha reklama"
                },
                "point": {
                    "type": "object",
                    "$ref": "#/definitions/models.Coordinates"
                },
                "title": {
                    "type": "string",
                    "example": "Pohod228"
                }
            }
        },
        "models.Route": {
            "type": "object",
            "required": [
                "best_time_to_go",
                "climb",
                "creator_id",
                "days",
                "difficult",
                "distance",
                "marks",
                "name",
                "region",
                "route",
                "start",
                "type"
            ],
            "properties": {
                "best_time_to_go": {
                    "type": "string",
                    "enum": [
                        "Зима",
                        " Весна",
                        " Лето",
                        " Осень"
                    ],
                    "example": "Лето"
                },
                "climb": {
                    "type": "integer",
                    "example": 3800
                },
                "creator_id": {
                    "type": "integer",
                    "example": 5
                },
                "days": {
                    "type": "integer",
                    "example": 5
                },
                "description": {
                    "type": "string",
                    "example": "Lexa dava verstai skoree"
                },
                "difficult": {
                    "type": "integer",
                    "example": 3
                },
                "distance": {
                    "type": "integer",
                    "example": 1488
                },
                "id": {
                    "type": "integer",
                    "example": 2
                },
                "marks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mark"
                    }
                },
                "mod_status": {
                    "type": "string",
                    "enum": [
                        "no status",
                        " pending",
                        " failed",
                        " verified"
                    ],
                    "example": "no status"
                },
                "name": {
                    "type": "string",
                    "example": "Lexa"
                },
                "region": {
                    "type": "string",
                    "example": "Хабаровский край"
                },
                "route": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Coordinates"
                    }
                },
                "start": {
                    "type": "object",
                    "$ref": "#/definitions/models.Coordinates"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "Пеший",
                        " Горный",
                        " Водный",
                        " Альпинизм",
                        " Велотуризм",
                        " Бег",
                        " Мото",
                        " Авто",
                        " Скитур",
                        " Лыжный",
                        " Горный велотуризм",
                        " Бездорожье",
                        " Ски-альпинизм",
                        " Снегоступы"
                    ],
                    "example": "Пеший"
                }
            }
        }
    }
}